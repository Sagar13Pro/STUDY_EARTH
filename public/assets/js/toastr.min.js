(function (define) {
    define(['jquery'], function ($) {

        return (function () {
            var $container;
            var toastr = {
                error: error,
                success: success,
                info: info,
                warn: warning,
                version: '2.0.3',
                options: {},
            };
            return toastr;

            /////////

            function Defaults() {
                return {
                    tapToDismiss: true,
                    toastClass: 'custom-toast',
                    positionClass: 'toast-to-right',
                    containerID: 'custom-toast-container',
                    messageClass: 'custom-toast-message',
                    titleClass: ' custom-toast-title',
                    titleMsgClass: 'custom-toast-title-msg',
                    closeOnHover: true,
                    newestOnTop: true,
                    //Show
                    showMethod: 'fadeIn',
                    duration: 300,
                    showEasing: 'swing',
                    //Hide
                    hideMethod: 'fadeOut',
                    hideduration: 500,
                    hideEasing: 'swing',

                    colorClasses: {
                        colorError: 'custom-toast-error',
                        colorSuccess: 'custom-toast-success',
                        colorInfo: 'custom-toast-info',
                        colorWarn: 'custom-toast-warning'
                    },
                    defaultTitle: {
                        errorTitle: 'Error',
                        successTitle: 'Success',
                        infoTitle: 'Info',
                        warnTitle: 'Warning'
                    },
                    timeOut: 5000,
                    extendedTimeOut: 4000,
                    closeHtml: '<button type="button">&times;</button>',
                    closeClass: 'custom-toast-close-button',
                    closeButton: false,
                    //on hover time freeze then extendedtimeout will start
                    progressBar: true,
                    progressClass: 'custom-toast-progress',
                };
            }
            function error(message, title, optionsOverride) {
                return notifier({
                    message: message,
                    optionsOverride: optionsOverride,
                    color: getOptions().colorClasses.colorError,
                    title: (title === undefined || title == "") ? getOptions().defaultTitle.errorTitle : title
                });
            }
            function success(message, title, optionsOverride) {
                return notifier({
                    message: message,
                    optionsOverride: optionsOverride,
                    color: getOptions().colorClasses.colorSuccess,
                    title: (title === undefined || title == "") ? getOptions().defaultTitle.successTitle : title
                });
            }
            function info(message, title, optionsOverride) {
                return notifier({
                    message: message,
                    optionsOverride: optionsOverride,
                    color: getOptions().colorClasses.colorInfo,
                    title: (title === undefined || title == "") ? getOptions().defaultTitle.infoTitle : title
                });
            }
            function warning(message, title, optionsOverride) {
                return notifier({
                    message: message,
                    optionsOverride: optionsOverride,
                    color: getOptions().colorClasses.colorWarn,
                    title: (title === undefined || title == "") ? getOptions().defaultTitle.warnTitle : title
                });

            }
            function createContainer(options) {
                $container = $('<div/>')
                    .attr('id', options.containerID)
                    .addClass(options.positionClass);
                $container.appendTo('body');
                return $container;
            }
            function getContainer(options, create) {
                $container = $('#' + options.containerID);
                if ($container.length) {
                    return $container;
                }
                if (create) {
                    $container = createContainer(options);
                }
                return $container;
            }
            function notifier(map) {
                var options = getOptions();
                if (typeof (map.optionsOverride) !== 'undefined') {
                    options = $.extend(options, map.optionsOverride);
                }

                $container = getContainer(options, true);
                //$intervalID for timeout to clear on hover check stickTHere,delayedTimeout
                var $intervalId = null,
                    $toastElement = $('<div/>'),
                    $titleElement = $('<div/>'),
                    $messageElement = $('<div/>'),
                    $titleMsg = $('<div/>')
                $progressElement = $('<div/>')
                $iconElement = $('<img/>'),
                    $closeElement = $(options.closeHtml),
                    progressBar = {
                        intervalId: null,
                        hideId: null,
                        maxHideTime: null
                    };
                $toastElement.addClass(options.toastClass + " " + map.color);
                configureToast();
                return $toastElement;

                function configureToast() {
                    setCloseButton();
                    setMessage();
                    setTitle();
                    setProgressBar();
                    displayToast();
                    closehandlerEvents();
                }
                function closehandlerEvents() {
                    if (options.tapToDismiss) {
                        $toastElement.click(hideToast);
                    }
                    if (options.closeOnHover) {
                        $toastElement.hover(stickyThere, delayedTimeOut);
                    }
                    if (options.closeButton) {
                        $toastElement.click(hideToast);
                    }
                }
                function displayToast() {
                    $container.append($toastElement);
                    $toastElement[options.showMethod](
                        { duration: options.duration, easing: options.showEasing }
                    );
                    if (options.timeOut > 0) {
                        $intervalId = setTimeout(hideToast, options.timeOut);
                        progressBar.maxHideTime = parseFloat(options.timeOut);
                        progressBar.hideId = new Date().getTime() + progressBar.maxHideTime;
                        if (options.progressBar) {
                            progressBar.intervalId = setInterval(updateProgress, 10);
                        }
                    }
                }
                function hideToast() {
                    return $toastElement[options.hideMethod]({
                        duration: options.hideduration,
                        easing: options.hideEasing,
                        complete: function () {
                            removeToast($toastElement);
                            clearTimeout($intervalId);
                        }
                    });
                }
                function delayedTimeOut() {
                    if (options.timeOut > 0 || options.extendedTimeOut > 0) {
                        $intervalId = setTimeout(hideToast, options.extendedTimeOut);
                        progressBar.maxHideTime = parseFloat(options.extendedTimeOut);
                        progressBar.hideId = new Date().getTime() + progressBar.maxHideTime;

                    }
                }
                function stickyThere() {
                    clearTimeout($intervalId);
                }
                //Set functions

                function setCloseButton() {
                    if (options.closeButton) {
                        $closeElement.addClass(options.closeClass).attr('role', 'button');
                        $titleElement.prepend($closeElement);
                    }
                }
                function setTitle() {
                    if (map.title && options.closeButton) {
                        $titleMsg.append(map.title).addClass(options.titleMsgClass);
                        $titleElement.append($titleMsg).addClass(options.titleClass);
                        $toastElement.prepend($titleElement);
                    }

                }
                function setProgressBar() {
                    if (options.progressBar) {
                        $progressElement.addClass(options.progressClass);
                        $toastElement.append($progressElement);
                    }
                }
                function setMessage() {
                    if (map.message) {
                        $messageElement.append(map.message).addClass(options.messageClass);
                        $toastElement.append($messageElement);
                    }
                }
                //progress bar updating
                function updateProgress() {
                    var percentage = ((progressBar.hideId - (new Date().getTime())) / progressBar.maxHideTime) * 100;
                    $progressElement.width(percentage + "%");
                }
            }
            //available option and merge with toast options.
            function getOptions() {
                return $.extend({}, Defaults(), toastr.options);
            }

            //Remove toast container.
            function removeToast($toastElement) {
                if (!$container) {
                    $container = getContainer();
                }
                $toastElement.remove();
                $toastElement = null;
                if ($container.children().length == 0) {
                    $container.remove();
                }
            }
        })();

    });

}
    (typeof define === 'function' && define.amd ? define : function (deps, factory) {
        window['toastr'] = factory(window['jQuery']);
    })

);
